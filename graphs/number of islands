class Solution {
  public:
    // Function to find the number of islands.
    void dfs(int x,int y,int n,int m,vector<vector<char>>& grid)
    {
        if(x<0 || x>=n || y<0 || y>=m || grid[x][y]!='1')
            return;
        grid[x][y] = '#';
        
        int dr[]={-1,-1,-1,0,0,1,1,1};
        int dc[]={-1,0,1,-1,1,-1,0,1};
        for(int i=0;i<8;i++)
        {
            int r = x+dr[i];
            int c = y+dc[i];
            dfs(r,c,n,m,grid);
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        // Code here
        int n = grid.size();
        int m = grid[0].size();
        int ans = 0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]=='1')
                {
                    ans++;
                    dfs(i,j,n,m,grid);
                }
            }
        }
        return ans;
    }
};
