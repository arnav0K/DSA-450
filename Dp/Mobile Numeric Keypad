https://www.youtube.com/watch?v=xaKENHcJts4

class Solution{


	public:
	long long int mat[4][3]={
	    {1,2,3},
	    {4,5,6},
	    {7,8,9},
	    {-1,0,-1}
	};
	long long int dp[10][26];
	long long find(int n,int i,int j)
	{
	    if(n==1)
	    return dp[mat[i][j]][n]=1;;
	    if(dp[mat[i][j]][n]!=-1)
	    return dp[mat[i][j]][n];
	    long long a=find(n-1,i,j);
	    
	    long long int e=0,b=0,c=0,d=0;
	    
	    if(j+1<=2   && mat[i][j+1]!=-1)
	    b=find(n-1,i,j+1);
	    if(i+1<=3   && mat[i+1][j]!=-1)
	    c=find(n-1,i+1,j);
	    if(j-1>=0  && mat[i][j-1]!=-1)
	    d=find(n-1,i,j-1);
	    if(i-1>=0 && mat[i-1][j]!=-1)
	    e=find(n-1,i-1,j);
	    
	    return dp[mat[i][j]][n]=a+b+c+d+e;
	    
	    
	}
	long long getCount(int N)
	{
		// Your code goes here
		memset(dp,-1,sizeof(dp));
		long long ans=0;
		for(int i=0;i<4;i++)
		{
		    for(int j=0;j<3;j++)
		    {   if(mat[i][j]!=-1)
		        ans+=find(N,i,j);
		    }
		}
		return ans;
	}


};
