void inorder(Node* root , vector<int> &v ){
       if(root == NULL){
           return ;
       }
       inorder(root->left,v);
       v.push_back(root->data);
       inorder(root->right,v);
   }
  
    Node* inordertotree(int s, int e, vector<int> v){
        if(s>e){
            return NULL;
        }
        int mid = (s+e)/2;
        Node* root = new Node(v[mid]);
        root->left = inordertotree(s, mid-1,v);
        root->right = inordertotree(mid+1,e,v);
        return root;
        
    }

    Node *binaryTreeToBST (Node *root){
        //Your code goes here
        vector<int> v;
        inorder(root,v);
        sort(v.begin() , v.end());
        return inordertotree(0,v.size()-1, v);
        

    }
}
