/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
       if(!headA || !headB) 
            return 0;
        ListNode *a=headA;
        ListNode *b=headB;
        int count1=0,count2=0;
        while(a){
            a=a->next;
            count1++;
        }
        while(b){
            b=b->next;
            count2++;
        }
        ListNode *t1=headA;
        ListNode *t2=headB;
        int diff=abs(count1-count2);
        if(count1>count2){
            while(diff!=0){
                t1=t1->next;
                diff--;
            }
        }
        else{
            while(diff!=0){
                t2=t2->next;
                diff--;
            }
        }

        while(t1!=t2){
            t1=t1->next;
            t2=t2->next;
        }
        return t1;
    }
};
