/*You are required to complete this method */

class Solution{
  public:
 
 int solve(int a[],int n, int k,int target,int curr,int index,vector<bool>&vis)
  {
      
      if(k==0)
      {
          return 1;
      }
      if(curr==target)
      {
         return solve(a,n,k-1,target,0,0,vis);
      }
      for(int i=index;i<n;i++)
      {
          if(vis[i]==false&&target+a[i]>=curr)
          {
              vis[i]=true;
              if( solve(a,n,k,target,curr+a[i],i+1,vis))
              return 1;
              vis[i]=false;
          }
              
       }
       return 0;
      
  }
    bool isKPartitionPossible(int a[], int n, int k)
    {
        vector<bool>vis(k+1,false);
        int sum=0;
        for(int i=0;i<n;i++)
        sum+=a[i];
        if(sum%k!=0||k>n)
        return 0;
        int target=sum/k;
        int x=solve(a,n,k,target,0,0,vis);
       return x;
         
    }
};
