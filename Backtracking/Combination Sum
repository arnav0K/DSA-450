//User function template for C++

class Solution {
  public:
    //Function to return a list of indexes denoting the required 
    //combinations whose sum is equal to given number.
   void combinations(int ind, int B, vector<int> &A, vector<int> &ds, vector<vector<int>> &ans){
        if(ind == A.size()){
            if(B == 0) ans.push_back(ds);
            return;
        }
        
        if(A[ind] <= B){
            ds.push_back(A[ind]);
            combinations(ind, B-A[ind], A, ds, ans);
            ds.pop_back();
        }
        combinations(ind+1, B, A, ds, ans);
    }  
  
    vector<vector<int> > combinationSum(vector<int> &A, int B) {
        vector<vector<int>> ans;
        vector<int> ds;
        sort(A.begin(), A.end());
        A.erase(unique(A.begin(), A.end()), A.end());
        combinations(0, B, A, ds, ans);
        return ans;
    }
};
