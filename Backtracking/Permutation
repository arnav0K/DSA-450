class Solution
{
	public:
	    void helper(int ind,string s,vector<string> &out){
	        if(ind==s.size()){
	            out.push_back(s);
	            return;
	        }
	        for(int i=ind;i<s.size();i++){
	            swap(s[i],s[ind]);
	            helper(ind+1,s,out);
	            swap(s[i],s[ind]);
	        }
	    }
	
		vector<string> find_permutation(string s)
		{
		    // Code here there
		    vector<string> out;
		    helper(0,s,out);
		    
		    //removing duplicates:
		    unordered_map<string,bool> mp;
		    vector<string> ans;
		    for(int i=0;i<out.size();i++){
		        if(!mp.count(out[i])){
		            mp[out[i]]=true;
		            ans.push_back(out[i]);
		        }
		    }
		    
		    //sort the array:
		    sort(ans.begin(),ans.end());
		    
		    return ans;
		}
};
